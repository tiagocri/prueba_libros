version: '3'
services:
  postgres-sql:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: distribuida
#    ports:
#      - 5433:5432
  proxy:
    image: traefik:v2.9.6
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    expose:
      - 80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  books-service:
    image: jaimesalvador/app-books:1.0.0
    environment:
      JAVAX_SQL_DATASOURCE_BOOKSDATASOURCE_DATASOURCE_USER: postgres
      JAVAX_SQL_DATASOURCE_BOOKSDATASOURCE_DATASOURCE_PASSWORD: postgres
      JAVAX_SQL_DATASOURCE_BOOKSDATASOURCE_DATASOURCE_URL: jdbc:postgresql://postgres-sql:5432/distribuida
      SERVER_PORT: 7001
      AUTHOR_URL: http://proxy/app2
    depends_on:
      - postgres-sql
    deploy:
      replicas: 2
    expose:
      - 7001
    labels:
      - "traefik.http.routers.books.rule=PathPrefix(`/app1`)"
      - "traefik.http.middlewares.books.stripprefix.prefixes=/app1"
      - "traefik.http.routers.books.middlewares=books"
  authors-service:
    image: jaimesalvador/app-authors:1.0.0
    environment:
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres-sql:5432/distribuida
      SERVER_PORT: 8080
    depends_on:
      - postgres-sql
    deploy:
      replicas: 3
    expose:
      - 8080
    labels:
      - "traefik.http.routers.authors.rule=PathPrefix(`/app2`)"
      - "traefik.http.middlewares.authors.stripprefix.prefixes=/app2"
      - "traefik.http.routers.authors.middlewares=authors"

